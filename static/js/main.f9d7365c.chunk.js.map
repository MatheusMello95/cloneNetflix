{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeatureMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featureData","setFeatureData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9d7365c.chunk.js","sourcesContent":["const API_KEY = '6dd5c524a85133af24216d35dc6a3b33';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/**\r\n * Originais da Netflix\r\n * Recomendados\r\n * em alta\r\n * Ação\r\n * Comédia\r\n * Terror\r\n * Romance\r\n * Documentario\r\n */\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default{\r\n    getHomeList: async()=>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para voce',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comedia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentario',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n\r\n        return info;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) => {\r\n    const [scrollX, setScrollX] = useState(0);\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0){\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: 50}} />\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: 50}} />\r\n            </div>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results && items.results.length > 0 && items.results.map((item, key) =>(\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './FeatureMovie.css';\r\n\r\nexport default ({item}) =>{\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres =[];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length> 200){\r\n        description = description.substring(0, 200)+ '...';\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <section className=\"featured\" style={{\r\n                backgroundSize:'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}>\r\n                <div className=\"featured--vertical\">\r\n                    <div className=\"featured--horizontal\">\r\n                        <div className=\"featured--name\">{item.original_name}</div>\r\n                        <div className=\"featured--info\">\r\n                            <div className=\"featured--points\">{item.vote_average} pontos</div>    \r\n                            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's':''}</div>\r\n                        </div>\r\n                        <div className=\"featured--description\">{description}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\r\n                            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                        </div>\r\n                        <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) =>{\r\n    return(\r\n        <header className={black ? 'black':''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://pmcvariety.files.wordpress.com/2020/05/netflix-logo.png\" alt=\"netflix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://occ-0-2796-1380.1.nflxso.net/dnm/api/v6/Z-WHgqd_TeJxSuha8aZ5WpyLcX8/AAAABbNIKili1pAe116qNur_XoN7rbpxY5zRXPjjdGuMMHYaHlPBAqLq2PuLgrOB7qxHpJmuRs58MRSmzsrmnDJnkJDM2A.png?r=f71\" alt=\"Usuario\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeatureMovie';\nimport Header from './components/Header';\n\nexport default () =>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () =>{\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando o Featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect (()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return()=>{\n      window.removeEventListener('scroll',scrollListener);\n    }\n  }, []);\n\n\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featureData &&\n        <FeatureMovie item={featureData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n\n      <footer>\n        Feito com por Matheus Mello <br/>\n        Direito de imagem para Netflix <br/>\n        Dados pegos do site Themoviedb.org\n      </footer>\n      {movieList.length <= 0 &&\n        <div className=\"loading\">\n          <img src=\"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/netflix-loading.gif\" alt=\"Carregando\"/>\n        </div>\n      }\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}